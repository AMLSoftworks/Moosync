name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Get yarn cache dir
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-node${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-node${{ matrix.node }}-
      - name: yarn install
        run: yarn install
      - name: setup env
        run: chmod +x setup_env.sh && . setup_env.sh
        shell: bash
      - name: install snapcraft
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update && sudo apt install -y snapd && sudo snap install snapcraft --classic
          fi
        shell: bash
      - name: yarn electron:build
        run: yarn electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
      - uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: |
            dist_electron/*.exe
            dist_electron/*.snap
            dist_electron/*.AppImage
            dist_electron/*.tar.gz
            dist_electron/*.deb
            dist_electron/*.dmg
            dist_electron/latest*.yml
